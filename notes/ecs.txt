Using this code as a starting point: https://devlog.hexops.com/2022/lets-build-ecs-part-2-databases/

Ideas:
  - Types
    - the runtime type info has a function for reacting the AnyColumn? Column
    - utils for checking if component has init(allocator) and deinit(allocator)
  - World
    - shared_data: map(u32, AnyPointer) https://github.com/MasterQ32/any-pointer 
      - Strings
        - String type? Storage? utility functions? regex?
        - instead of components storing slices, they just store a u32 hash for lookup?
    - Events?
      - immediate, sync point (like 'end of frame' consumption)
      - maybe systems 'subscribe' to events during their init()?
          - a 'master' system fires said events?
  - Entities
    - world: *World
      - access shared_data, events, etc
    - Archetype
      - shared_data (list of ids)
        - factor this into archetype hash
    - Querying
      - tuple https://ziglearn.org/chapter-1/#anonymous-structs
      - var query = Query(?ArrayList(u32)).has(.{}).has_shared(.{}).not(.{}).not_shared(.{});
      - query(param) null is 'all', or pass a list of archetype hashes
      - query.collect().iterator()
      - maybe I want to order the filtering for user optimization?
    - Some way to 'bundle' all components of an entity, json-like printing
      - hashmap(u32, AnyPointer) from https://github.com/MasterQ32/any-pointer 
      - switch case value --> id(ComponentType) ?
  - Systems
    - System interface (like AnyColumn)?
    - map (u32, System)
    - execution order (list of ids, later on list of list of ids which can be run in parallel and 'go wide')
  - Parallel
    - thread pool, jobs
    - some way to make Entities thread safe
    - EntitiesCommandBuffer (thread-safe queue)?